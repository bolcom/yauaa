<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Yet Another UserAgent Analyzer
  ~ Copyright (C) 2013-2023 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <groupId>nl.basjes.parse.useragent</groupId>
  <artifactId>yauaa-example-parent-it</artifactId>
  <version>0.0.1</version>

  <name>Yauaa : Examples :</name>

<!--  &lt;!&ndash; Use these while developing these tests. &ndash;&gt;-->
<!--  <properties>-->
<!--    <target.java.version>1.8</target.java.version>-->
<!--    <target.java.release>8</target.java.release>-->
<!--    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
<!--    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>-->
<!--    <maven.compiler.source>${target.java.version}</maven.compiler.source>-->
<!--    <maven.compiler.target>${target.java.version}</maven.compiler.target>-->
<!--    <maven.compiler.release>${target.java.release}</maven.compiler.release>-->

<!--    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>-->
<!--    <maven-failsafe-plugin.version>3.0.0-M6</maven-failsafe-plugin.version>-->
<!--    <maven-surefire-plugin.version>3.0.0-M6</maven-surefire-plugin.version>-->
<!--    <docker-maven-plugin.version>0.39.1</docker-maven-plugin.version>-->

<!--    &lt;!&ndash; This is to make the example code a bit easier to copy into your own project. &ndash;&gt;-->
<!--    <yauaa.version>7.0.0-SNAPSHOT</yauaa.version>-->

<!--    <log4j2.version>2.17.2</log4j2.version>-->
<!--    <slf4j1.version>1.7.36</slf4j1.version>-->
<!--    <slf4j2.version>2.0.0</slf4j2.version>-->

<!--    <kotlin.version>1.6.10</kotlin.version>-->
<!--    <scala-library.version>2.13.8</scala-library.version>-->
<!--    <scalatestplus-junit-4.version>3.2.2.0</scalatestplus-junit-4.version>-->
<!--    <scalatest_2.13.version>3.2.11</scalatest_2.13.version>-->
<!--    <quarkus.platform.version>2.8.0.Final</quarkus.platform.version>-->
<!--    <quarkus-plugin.version>${quarkus.platform.version}</quarkus-plugin.version>-->
<!--    <junit5.version>5.8.2</junit5.version>-->
<!--    <hamcrest-core.version>2.2</hamcrest-core.version>-->

<!--  </properties>-->

  <properties>
    <target.java.version>1.8</target.java.version>
    <target.java.release>8</target.java.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
    <maven.compiler.source>${target.java.version}</maven.compiler.source>
    <maven.compiler.target>${target.java.version}</maven.compiler.target>
    <maven.compiler.release>${target.java.release}</maven.compiler.release>

    <maven-compiler-plugin.version>@maven-compiler-plugin.version@</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>@maven-failsafe-plugin.version@</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>@maven-surefire-plugin.version@</maven-surefire-plugin.version>
    <docker-maven-plugin.version>@docker-maven-plugin.version@</docker-maven-plugin.version>

    <!-- Get actual version from invoker plugin. -->
    <yauaa.version>@yauaa.version@</yauaa.version>

    <log4j2.version>@log4j2.version@</log4j2.version>
    <slf4j1.version>@slf4j1.version@</slf4j1.version>
    <slf4j2.version>@slf4j2.version@</slf4j2.version>

    <kotlin.version>@kotlin.version@</kotlin.version>
    <scala-library.version>@scala-library.version@</scala-library.version>
    <scalatestplus-junit-4.version>@scalatestplus-junit-4.version@</scalatestplus-junit-4.version>
    <scalatest_2.13.version>@scalatest_2.13.version@</scalatest_2.13.version>
    <quarkus.platform.version>@quarkus.platform.version@</quarkus.platform.version>
    <quarkus-plugin.version>@quarkus-plugin.version@</quarkus-plugin.version>

    <junit5.version>@junit5.version@</junit5.version>
    <hamcrest-core.version>@hamcrest-core.version@</hamcrest-core.version>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest-core.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <failIfNoTests>true</failIfNoTests>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>java</module>
    <module>java-slf4j</module>
    <module>kotlin</module>
    <module>quarkus</module>
    <module>scala</module>
  </modules>

</project>
