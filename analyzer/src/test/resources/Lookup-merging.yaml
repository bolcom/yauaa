# $schema: https://yauaa.basjes.nl/v1/YauaaConfig.json
#
# Yet Another UserAgent Analyzer
# Copyright (C) 2013-2025 Niels Basjes
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

config:
  - lookup:
      name: 'SomeLookup'
      map:
        '1': 'one'
        '3': 'three'

  - lookup:
      name: 'SomeLookup'
      map:
        '2': 'two'
        '3': 'three' # Because the value is the same in all cases this should work.

  - set:
      name: 'SomeSet'
      values:
        - '1'
        - '3'

  - set:
      name: 'SomeSet'
      values:
        - '2'
        - '3' # Duplicate values should just work

  - matcher:
      extract:
      - 'Lookup1: 1:  LookUp[SomeLookup;agent.(1)product.version]'
      - 'Lookup2: 1:  LookUp[SomeLookup;agent.(2)product.version]'
      - 'Lookup3: 1:  LookUp[SomeLookup;agent.(3)product.version]'

  - matcher:
      require:
      - 'agent.(1)product.version?SomeSet'
      extract:
      - 'Set1: 1:  "Yes"'

  - matcher:
      require:
      - 'agent.(2)product.version?SomeSet'
      extract:
      - 'Set2: 1:  "Yes"'

  - matcher:
      require:
      - 'agent.(3)product.version?SomeSet'
      extract:
      - 'Set3: 1:  "Yes"'


  - test:
      name: 'Ensure lookup and set merging works'
      input:
        user_agent_string: 'Lookup/1 Lookup/2 Lookup/3'
      expected:
        Lookup1:     "one"
        Lookup2:     "two"
        Lookup3:     "three"
        Set1:        "Yes"
        Set2:        "Yes"
        Set3:        "Yes"
