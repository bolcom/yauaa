# $schema: https://yauaa.basjes.nl/v1/YauaaConfig.json
#
# Yet Another UserAgent Analyzer
# Copyright (C) 2013-2025 Niels Basjes
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

config:
- lookup:
    name: 'Dummy'
    map:
      "Nothing": "to see here"

- matcher:
    options:
    - 'verbose'
    variable:
    - 'FirstProductName: agent.(1)product.(1)name'
    require:
    - 'LookUp[Dummy;@FirstProductName;"Fake"]'
    - 'IsInLookUpContains[Dummy;@FirstProductName]'
    - 'IsNotInLookUpContains[Dummy;@FirstProductName]'
    - 'LookUpContains[Dummy;@FirstProductName;"Fake"]'
    - 'IsNull[@FirstProductName^.name="Word"!="Other"^.name[1]@{"Start"}"End"@@[-1][2-3][3-]<><>><<]'
    extract:
    - 'WordMatchFlipFlop: 1:@FirstProductName^.(1)comments.(1-3)entry.(1)text[-1]="One"@[3]="Three"@[2]'

- matcher:
    options:
    - 'verbose'
    require:
    - 'agent.(1)product.(1)name="Word"'
    extract:
    - 'WordMatchFlipFlop: 2:CleanVersion[LookUp[Dummy;agent.(1)product.(1)name^.name="Bla";"Default"]]'

- matcher:
    options:
    - 'verbose'
    extract:
    - 'WordMatchFlipFlop: 3:CleanVersion[LookUp[Dummy;agent.(1)product.(1)name^.name="Bla"]]'

- matcher:
    options:
    - 'verbose'
    extract:
    - 'Impossible: 2:CleanVersion[LookUp[Dummy;agent.(1)product.(1)name="Bla"]]'

- matcher:
    options:
      - 'verbose'
    extract:
      - 'LookupDefaultNoInput: 2:CleanVersion[LookUp[Dummy;agent.uuid;"Default for no input"]]'

# Partial match
- matcher:
    options:
      - 'verbose'
    extract:
      - 'Impossible: 2:CleanVersion[LookUp[Dummy;agent.(1)product.(1)name="Bla"]]'
      - 'Impossible2: 2:CleanVersion[LookUp[Dummy;agent.(1)product.(1)name="Word"]]'

- matcher:
    options:
    - 'verbose'
    require:
    - 'CleanVersion[LookUp[Dummy;agent.(1)product.(1)name^.name="Word"]]'
    extract:
    - 'Foo: 1:"Bar"'

- set:
    name: 'LookupSet'
    values:
      - 'Two'
      - 'Four'

- matcher:
    options:
    - 'verbose'
    variable:
    - 'Product:agent.(1)product'
    require:
    - '@Product'
    - '@Product.(1)name?LookupSet'
    - '@Product.(1)version!?LookupSet'
    extract:
    - 'ConcatL : 1:Concat["-->";agent.(1)product.(1)name      ]'
    - 'ConcatR : 1:Concat[      agent.(1)product.(1)name;"<--"]'
    - 'ConcatLR: 1:Concat["-->";agent.(1)product.(1)name;"<--"]'

- matcher:
    options:
      - 'verbose'
    variable:
      - 'Product:agent.(1)product'
    require:
      - '@Product~"Something"'
      - '@Product!~"Unlikely"'
    extract:
      - 'Contains: 1: "Contains"'

- test:
    options:
    - 'verbose'
    name: 'Validate Debug Output looks good'
    input:
      user_agent_string: 'Word/1 ( One Two Three; OneTwoThreeFour)'
    expected:
      Name                    : 'Word'
      FirstCommentEntry       : 'One Two Three'
      LookupSegment23         : 'Two|Three'
      LookupDefaultNoInput    : 'Default for no input'
      DidWeHaveASyntaxError   : 'No we did''t'
      NoProductUuid           : 'Dummy'

- matcher:
    options:
    - 'verbose'
    extract:
      - 'Name:1:NormalizeBrand [ agent.(1)product.(1)name^.name]'

- lookup:
    name: Segmented
    map:
      'OneTwoThreeFour' : 'One|Two|Three|Four'

- matcher:
    options:
      - 'verbose'
    extract:
      - 'LookupSegment23 :   1 : LookUp[Segmented;agent.product.comments.(2)entry][[2-3]]'

- matcher:
    options:
      - 'verbose'
    extract:
      - 'FirstCommentEntry    :   1 : DefaultIfNull[agent.product.comments.(1)entry;"There is no commment entry"]'

- test:
    options:
      - 'verbose'
    input:
      user_agent_string: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1'
    expected:
      DidWeHaveASyntaxError                : 'No we did''t'
      FirstCommentEntry                    : 'iPhone'
      LookupDefaultNoInput                 : 'Default for no input'
      Name                                 : 'Mozilla'
      NoProductUuid                        : 'Dummy'

- matcher:
    options:
      - 'verbose'
    variable:
      - 'MacOS                               :agent.(1-5)product.(1)comments.entry.(1-2)text[2-3]="Mac OS"'
    require:
      - 'IsNull[@MacOS@[4]]'
    extract:
      - 'IsNull                         :       10 :"Found it"'

- matcher:
    options:
      - 'verbose'
    require:
      - 'IsNull[agent.product.uuid]'
    extract:
      - 'NoProductUuid    :   1 : "Dummy"'

- test:
    options:
    - 'verbose'
    input:
      user_agent_string: 'MoZilLa/1_2.3'
    expected:
      Name                   : 'Mozilla'
      FirstCommentEntry      : 'There is no commment entry'
      LookupDefaultNoInput   : 'Default for no input'
      DidWeHaveASyntaxError  : 'No we did''t'
      NoProductUuid                        : 'Dummy'

- test:
    options:
    - 'verbose'
    name: 'Syntax error'
    input:
      user_agent_string: '${123+456}'
    expected:
      DeviceClass                          : 'Hacker'
      DeviceName                           : 'Hacker'
      DeviceBrand                          : 'Hacker'
      DeviceVersion                        : 'Hacker'
      OperatingSystemClass                 : 'Hacker'
      OperatingSystemName                  : 'Hacker'
      OperatingSystemVersion               : 'Hacker'
      OperatingSystemVersionMajor          : 'Hacker'
      OperatingSystemNameVersion           : 'Hacker'
      OperatingSystemNameVersionMajor      : 'Hacker'
      LayoutEngineClass                    : 'Hacker'
      LayoutEngineName                     : 'Hacker'
      LayoutEngineVersion                  : 'Hacker'
      LayoutEngineVersionMajor             : 'Hacker'
      LayoutEngineNameVersion              : 'Hacker'
      LayoutEngineNameVersionMajor         : 'Hacker'
      AgentClass                           : 'Hacker'
      AgentName                            : 'Hacker'
      AgentVersion                         : 'Hacker'
      AgentVersionMajor                    : 'Hacker'
      AgentNameVersion                     : 'Hacker'
      AgentNameVersionMajor                : 'Hacker'
      HackerAttackVector                   : 'Unknown'
      HackerToolkit                        : 'Unknown'
      __SyntaxError__                      : 'true'
      FirstCommentEntry                    : 'There is no commment entry'
      LookupDefaultNoInput                 : 'Default for no input'
      DidWeHaveASyntaxError                : 'Yes we did'
      NoProductUuid                        : 'Dummy'
      RemarkablePattern                    : 'Hacker'


- matcher:
    options:
    - 'verbose'
    require:
      - 'agent.(1)product.(1)name="Name"'
    extract:
      - 'IgnoreSecond:1:NormalizeBrand [agent.product.(1)name]'

- matcher:
    options:
      - 'verbose'
    require:
      - '__SyntaxError__="true"'
    extract:
      - 'DidWeHaveASyntaxError:1:"Yes we did"'

- matcher:
    options:
      - 'verbose'
    require:
      - '__SyntaxError__="false"'
    extract:
      - 'DidWeHaveASyntaxError:1:"No we did''t"'

- test:
    options:
      - 'verbose'
    name: 'Double match ignore second'
    input:
      user_agent_string: 'Name/1 Name/2'
    expected:
      IgnoreSecond                         : 'Name'
      Name                                 : 'Name'
      FirstCommentEntry                    : 'There is no commment entry'
      LookupDefaultNoInput                 : 'Default for no input'
      DidWeHaveASyntaxError                : 'No we did''t'
      NoProductUuid                        : 'Dummy'
